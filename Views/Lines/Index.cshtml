@model IEnumerable<ProductionManagement.Models.Line>

@{
	Layout = "_Layout";
}

<div class="container-fluid">
	<div class="row">
		<p>
			@Html.ActionLink("Добавить", "Details", "Lines", new { mode = "create" }, new { @class = "btn btn-primary btn-sm" })
		</p>
	</div>
	<div class="row">
		<div class="col-lg-6">
			<textarea id="logs" rows="20" cols="40" style="width: 100%; height: 100%; overflow-y: scroll;" readonly></textarea>
		</div>
	</div>
	<div class="row">
		@foreach (var item in Model)
		{
			<div class="card text-white @(item.IsActive ? "border-success" : "border-danger") col-md-2" style="max-width: 20rem;">
				<div class="card-header">
					@Html.ActionLink("Линия " + item.Name, "Last50", "Prod", new { line = item.Name.Trim() }, null)
				</div>
				<div class="card-body">
					<p class="card-text">IP: @Html.DisplayFor(modelItem => item.Ip)</p>
					<p class="card-text">Принтер: @Html.DisplayFor(modelItem => item.Printer)</p>
					<a href="/Lines/Details/@item.Name?mode=edit" class="card-link">Свойства</a>
				</div>
				<div class="card-footer text-muted">
					<p>@item.LastCheck.ToString()</p>
				</div>
			</div>
		}
	</div>
</div>

<script src="~/lib/microsoft-signalr/dist/browser/signalr.min.js"></script>
<script>
	const connection = new signalR.HubConnectionBuilder()
		.withUrl("/loghub")
		.configureLogging(signalR.LogLevel.Information)
		.build();

	connection.start().then(() => document.getElementById("logs").value += "SignalR connected")
		.catch((err) => console.error(err.toString()));

	connection.on("ReceiveLog", (message) => {
		document.getElementById("logs").value += `${message}\n`;
	});
</script>