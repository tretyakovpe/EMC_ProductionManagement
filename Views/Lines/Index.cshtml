@model IEnumerable<ProductionManagement.Models.Line>
@{
	Layout = "_Layout";
}
<div class="container-fluid">
	<div class="row">
		<p>
			@Html.ActionLink("Добавить", "Details", "Lines", new { mode = "create" }, new { @class = "btn btn-primary btn-sm" })
		</p>
	</div>
	<div class="row">
		<div class="col-sm-6">
			<table class="table table-hover">
				<tbody>
					@foreach (var item in Model)
					{
						<tr class="table-dark">
							<td><span class="btn @(item.IsOnline ? "btn-success" : "btn-danger") @(item.IsActive ? "" : "disabled")"> @item.Name </span></td>
							<td>
								<div class="progress-container">
									<div class="progress-cell" id="progress-cell-@item.Name">&nbsp;</div>
								</div>
							</td>
							<td>@Html.ActionLink("Продукция", "Last50", "Prod", new { line = item.Name, printer = item.Printer }, null)</td>
							<td>@(item.Ip)</td>
							<td><a href="http://@(item.Printer.Trim()).emc-tlt.tech">@(item.Printer.Trim())</a></td>
							<td><a href="/Lines/Details/@item.Name?mode=edit" class="card-link">Свойства</a></td>
						</tr>
					}
				</tbody>
			</table>
		</div>
		<div class="col-sm-6">
			<textarea id="logs" rows="20" cols="80" style="width: 100%; height: 100%; overflow-y: scroll; font-family: monospace; font-size:10px;" readonly></textarea>
		</div>
	</div>
</div>
<script src="~/lib/microsoft-signalr/dist/browser/signalr.min.js"></script>
<script>
	const connection = new signalR.HubConnectionBuilder()
		.withUrl("/loghub")
		.configureLogging(signalR.LogLevel.Information)
		.build();

	connection.start().then(() => document.getElementById("logs").value += "SignalR connected")
		.catch((err) => console.error(err.toString()));

	connection.on("ReceiveLog", (message) => {
		const logs = document.getElementById("logs");
		// Получаем текущее содержимое TextArea
		let currentLogs = logs.value;

		// Добавляем новое сообщение в начало
		logs.value = `${message}\n${currentLogs}`;

		// Прокрутка до начала TextArea
		logs.scrollTop = 0;
	});

	connection.on('UpdateCell', function(Id, counter, volume) {
		const cellElement = document.getElementById("progress-cell-" + Id+" ");
		if (cellElement) {
			// Обновляем стиль псевдоэлемента ::before напрямую
			let percent = counter;
			if (volume!=0){
				percent = (counter/volume)*100;
			}
			cellElement.style.setProperty('height', `${percent}%`);
		} else {
			console.error("Не найден элемент с id:", "progress-cell-" + Id);
		}
	});
</script>
