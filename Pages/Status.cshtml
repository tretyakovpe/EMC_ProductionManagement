@page
@model ProductionManagement.Pages.StatusModel
@{
    Layout = "_Layout";
    ViewData["Title"] = "Service Status";
}

<h1>Service Status</h1>
<div id="services-container"></div>

@section Scripts {
    <script>
        async function fetchServicesStatus() {
            const response = await fetch('/status');
            const services = await response.json();

            const container = document.getElementById('services-container');
            container.innerHTML = ''; // Очищаем контейнер

            services.forEach(service => {
                const serviceDiv = document.createElement('div');
                serviceDiv.className = 'service';

                const statusClass = service.IsRunning ? 'status-running' : 'status-stopped';
                serviceDiv.innerHTML = `
                    <strong>${service.ServiceName}</strong>:
                    <span class="${statusClass}">${service.IsRunning ? 'Running' : 'Stopped'}</span>
                    <br>
                    Last Log: ${service.LastLog}
                `;

                container.appendChild(serviceDiv);
            });
        }

        // Обновляем статус каждые 5 секунд
        setInterval(fetchServicesStatus, 5000);
        fetchServicesStatus(); // Первый вызов
    </script>
}

<style>
    .service {
        margin-bottom: 15px;
    }
    .status-running {
        color: green;
    }
    .status-stopped {
        color: red;
    }
</style>